{"version":3,"sources":["components/GlobalStyle.js","canvas/CanvasProperties.js","canvas/CanvasAnimate.js","canvas/CanvasResize.js","canvas/CanvasLasers/CanvasDot.js","canvas/CanvasLasers/CanvasLine.js","canvas/CanvasLasers/CanvasLasers.js","canvas/CanvasLogic.js","canvas/Canvas.js","components/home/Home.js","Router.js","utils/theme.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","_templateObject","GlobalStyle","react_default","a","createElement","PureComponent","CanvasProperties","Object","classCallCheck","this","scene","CanvasLogic","renderer","camera","rectangle","randoms","lasersNumber","canvasDots","canvasLines","CanvasAnimate","_CanvasProperties","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","requestAnimationFrame","animate","bind","rotateRectangle","lookAt","THREE","zoom","updateProjectionMatrix","render","coefficient","window","innerWidth","innerHeight","i","time","Date","now","position","x","y","Math","sin","z","cos","CanvasResize","func","addEventListener","addWindowResizeListener","scaleRenderer","_this","setSize","forEach","line","geometry","vertices","CanvasDot","color","generateRandomColor","dotGeometry","push","dotMaterial","size","sizeAttenuation","dot","add","rgbString","floor","random","CanvasLine","material","transparent","opacity","CanvasLasers","drawDot","drawLine","canvas","antialias","setClearColor","setUpCamera","setUpCanvasStaticProperties","drawLasers","scaleRendererOnResize","dots","CanvasThreeJs","styled","Canvas_templateObject","Canvas","props","call","React","createRef","ref","current","createAnimation","Component","Claim","div","Home_templateObject","Header","h1","_templateObject2","PrimaryColor","span","_templateObject3","theme","colors","primary","Home","Fragment","canvas_Canvas","Router","BrowserRouter","Route","exact","path","component","font","thin","regular","bold","App","components_GlobalStyle","styled_components_browser_esm","src_Router","ReactDOM","src_App","document","getElementById"],"mappings":"mkBAGA,IAAMA,EAAeC,YAAHC,KA8BHC,mLAPP,OACIC,EAAAC,EAAAC,cAACN,EAAD,aAHcO,wCCtBbC,EACT,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACXG,KAAKC,MAAQC,EAAYD,MACzBD,KAAKG,SAAWD,EAAYC,SAC5BH,KAAKI,OAASF,EAAYE,OAC1BJ,KAAKK,UAAYH,EAAYG,UAC7BL,KAAKM,QAAUJ,EAAYI,QAC3BN,KAAKO,aAAe,IACpBP,KAAKQ,WAAaN,EAAYM,WAC9BR,KAAKS,YAAcP,EAAYO,aCR1BC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAU,GAAAZ,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAAY,GAAAI,MAAAd,KAAAe,YAAA,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAAY,EAAAC,GAAAb,OAAAmB,EAAA,EAAAnB,CAAAY,EAAA,EAAAQ,IAAA,UAAAC,MAAA,WAGQC,sBAAsBpB,KAAKqB,QAAQC,KAAKtB,OACxCA,KAAKuB,kBACLvB,KAAKI,OAAOoB,OAAO,IAAIC,KAAe,EAAG,EAAI,IAC7CzB,KAAKI,OAAOsB,KAAO,IACnB1B,KAAKI,OAAOuB,yBACZ3B,KAAKG,SAASyB,OAAO5B,KAAKC,MAAOD,KAAKI,UAR9C,CAAAc,IAAA,kBAAAC,MAAA,WAcQ,IAFA,IAAMU,EAAcC,OAAOC,WAAaD,OAAOE,YAEtCC,EAAI,EAAGA,EAAIjC,KAAKO,aAAc0B,IAAK,CACxC,IAAMC,EAAoB,KAAbC,KAAKC,MAAiBpC,KAAKM,QAAQ2B,GAEhDjC,KAAKQ,WAAWyB,GAAGI,SAASC,GAAK,EACjCtC,KAAKQ,WAAWyB,GAAGI,SAASE,EAAIC,KAAKC,IAAW,GAAPP,GAAcD,EAAI,GAC3DjC,KAAKQ,WAAWyB,GAAGI,SAASK,EAAIF,KAAKG,IAAW,GAAPT,GAAcD,GAAM,GAAMJ,GAEnE7B,KAAKS,YAAYwB,GAAGI,SAASC,GAAK,EAClCtC,KAAKS,YAAYwB,GAAGI,SAASE,EAAIC,KAAKC,IAAW,GAAPP,GAAcD,EAAI,GAC5DjC,KAAKS,YAAYwB,GAAGI,SAASK,EAAIF,KAAKG,IAAW,GAAPT,GAAcD,GAAM,GAAMJ,QAvBhFnB,EAAA,CAAmCb,GCAtB+C,EAAb,SAAAjC,GAAA,SAAAiC,IAAA,OAAA9C,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,GAAA9C,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAA8C,GAAA9B,MAAAd,KAAAe,YAAA,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAA8C,EAAAjC,GAAAb,OAAAmB,EAAA,EAAAnB,CAAA8C,EAAA,EAAA1B,IAAA,0BAAAC,MAAA,SAE4B0B,GACpBf,OAAOgB,iBAAiB,SAAUD,KAH1C,CAAA3B,IAAA,wBAAAC,MAAA,WAQQnB,KAAK6B,YAAcC,OAAOC,WAAaD,OAAOE,YAC9ChC,KAAK+C,wBAAwB/C,KAAKgD,cAAc1B,KAAKtB,OACrDA,KAAKgD,kBAVb,CAAA9B,IAAA,gBAAAC,MAAA,WAcoB,IAAA8B,EAAAjD,KACZA,KAAKG,SAAS+C,QAAQpB,OAAOC,WAAYD,OAAOE,aAEhDhC,KAAKS,YAAY0C,QAAQ,SAACC,GACtBA,EAAKC,SAASC,SAAW,CACrB,IAAI7B,IAAc,EAAG,IAAc,EAAIwB,EAAKpB,aAAjB,KAC3B,IAAIJ,IAAc,EAAG,EAAG,UApBxCmB,EAAA,CAAkC/C,GCCrB0D,EAAb,SAAA5C,GAAA,SAAA4C,IAAA,OAAAzD,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,GAAAzD,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAAyD,GAAAzC,MAAAd,KAAAe,YAAA,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAAyD,EAAA5C,GAAAb,OAAAmB,EAAA,EAAAnB,CAAAyD,EAAA,EAAArC,IAAA,UAAAC,MAAA,WAGQ,IAAMqC,EAAQxD,KAAKyD,sBACbC,EAAc,IAAIjC,IACxBiC,EAAYJ,SAASK,KACjB,IAAIlC,IAAc,EAAG,EAAG,IAE5B,IAAMmC,EAAc,IAAInC,IAAqB,CAAEoC,KAAM,EAAGC,iBAAiB,EAAON,MAAOA,IACjFO,EAAM,IAAItC,IAAaiC,EAAaE,GAC1C1D,EAAYM,WAAWmD,KAAKI,GAC5B/D,KAAKC,MAAM+D,IAAID,KAXvB,CAAA7C,IAAA,sBAAAC,MAAA,WAiBQ,IADA,IAAI8C,EAAY,OACPhC,EAAI,EAAGA,EAAI,EAAGA,IACnBgC,GAAczB,KAAK0B,MAAsB,IAAhB1B,KAAK2B,UAGxBF,GADC,IAANhC,EACkB,IACF,IAErB,OAAOgC,MAxBfV,EAAA,CAA+B1D,GCAlBuE,EAAb,SAAAzD,GAAA,SAAAyD,IAAA,OAAAtE,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,GAAAtE,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAAsE,GAAAtD,MAAAd,KAAAe,YAAA,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAAsE,EAAAzD,GAAAb,OAAAmB,EAAA,EAAAnB,CAAAsE,EAAA,EAAAlD,IAAA,WAAAC,MAAA,WAGQ,IAAMkD,EAAW,IAAI5C,IAAwB,CACzC+B,MAAO,SAAUc,aAAa,EAAMC,SAAS,IAEjDF,EAASE,QAAU,GAEnB,IAAMlB,EAAW,IAAI5B,IACrB4B,EAASC,SAASK,KACd,IAAIlC,IAAc,EAAG,KAAM,IAC3B,IAAIA,IAAc,EAAG,EAAG,IAE5B,IAAM2B,EAAO,IAAI3B,IAAW4B,EAAUgB,GACtCrE,KAAKC,MAAM+D,IAAIZ,GACflD,EAAYO,YAAYkD,KAAKP,OAfrCgB,EAAA,CAAgCvE,GCCnB2E,EAAb,SAAA7D,GAAA,SAAA6D,IAAA,OAAA1E,OAAAC,EAAA,EAAAD,CAAAE,KAAAwE,GAAA1E,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAA0E,GAAA1D,MAAAd,KAAAe,YAAA,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAA0E,EAAA7D,GAAAb,OAAAmB,EAAA,EAAAnB,CAAA0E,EAAA,EAAAtD,IAAA,aAAAC,MAAA,WAGQ,IAAK,IAAIc,EAAI,EAAGA,EAAIjC,KAAKO,aAAc0B,IAAK,CACxC/B,EAAYI,QAAQqD,KAAKnB,KAAK2B,WAElB,IAAIZ,GACZkB,WAES,IAAIL,GACZM,gBAVjBF,EAAA,CAAkC3E,GCArBK,EAAb,WAEI,SAAAA,EAAYyE,GAAS7E,OAAAC,EAAA,EAAAD,CAAAE,KAAAE,GACjBF,KAAKC,MAAQ,IAAIwB,IACjBzB,KAAKG,SAAW,IAAIsB,IAAoB,CAAEkD,OAAQA,EAAQC,WAAW,IACrE5E,KAAKG,SAAS0E,cAAc,QAAU,GAL9C,OAAA/E,OAAAmB,EAAA,EAAAnB,CAAAI,EAAA,EAAAgB,IAAA,kBAAAC,MAAA,WAUQnB,KAAK8E,cACL9E,KAAK+E,8BACL/E,KAAKgF,aAELhF,KAAKiF,wBACLjF,KAAKqB,YAfb,CAAAH,IAAA,cAAAC,MAAA,WAoBQnB,KAAKI,OACD,IAAIqB,KACC,EACD,EACA,GACC,GACA,IACD,KAGRzB,KAAKC,MAAM+D,IAAIhE,KAAKI,UA9B5B,CAAAc,IAAA,8BAAAC,MAAA,WAkCQjB,EAAYD,MAAQD,KAAKC,MACzBC,EAAYC,SAAWH,KAAKG,SAC5BD,EAAYE,OAASJ,KAAKI,OAC1BF,EAAYgF,KAAO,GACnBhF,EAAYI,QAAU,GACtBJ,EAAYM,WAAa,GACzBN,EAAYO,YAAc,KAxClC,CAAAS,IAAA,aAAAC,MAAA,WA4CQ,IAAM6D,EAAa,IAAIR,EACvBQ,EAAWA,eA7CnB,CAAA9D,IAAA,wBAAAC,MAAA,YAiD6B,IAAIyB,GACZqC,0BAlDrB,CAAA/D,IAAA,UAAAC,MAAA,YAsD8B,IAAIT,GACZW,cAvDtBnB,EAAA,0HCDA,IAAMiF,EAAgBC,IAAOT,OAAVU,KAyBJC,cAjBX,SAAAA,EAAYC,GAAO,IAAAtC,EAAA,OAAAnD,OAAAC,EAAA,EAAAD,CAAAE,KAAAsF,IACfrC,EAAAnD,OAAAc,EAAA,EAAAd,CAAAE,KAAAF,OAAAe,EAAA,EAAAf,CAAAwF,GAAAE,KAAAxF,KAAMuF,KACDZ,OAASc,IAAMC,YAFLzC,wEAMf,OACIxD,EAAAC,EAAAC,cAACwF,EAAD,CAAeQ,IAAM3F,KAAK2E,qDAKV,IAAIzE,EAAYF,KAAK2E,OAAOiB,SACpCC,yBAdCC,gqBCPrB,IAAMC,EAAQX,IAAOY,IAAVC,KAYLC,EAASd,IAAOe,GAAVC,KAoBNC,EAAejB,IAAOkB,KAAVC,IACP,SAAAhB,GAAK,OAAIA,EAAMiB,MAAMC,OAAOC,UAqBxBC,mLAfP,OACIlH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkH,SAAA,KACInH,EAAAC,EAAAC,cAACkH,EAAD,MACApH,EAAAC,EAAAC,cAACoG,EAAD,KACItG,EAAAC,EAAAC,cAACuG,EAAD,mBACezG,EAAAC,EAAAC,cAAC0G,EAAD,4BAEf5G,EAAAC,EAAAC,cAACuG,EAAD,iDATDJ,aC3BJgB,mLARP,OACIrH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,KACItH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYR,YAJ7Bb,aCJRU,EAAQ,CACjBY,KAAM,CACFC,KAAM,IACNC,QAAS,IACTC,KAAM,KAEVd,OAAQ,CACJC,QAAS,YCYFc,mLAXP,OACI/H,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkH,SAAA,KACInH,EAAAC,EAAAC,cAAC8H,EAAD,MACAhI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAelB,MAAOA,GAClB/G,EAAAC,EAAAC,cAACgI,EAAD,eANF7B,aCDlB8B,IAAShG,OAAOnC,EAAAC,EAAAC,cAACkI,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.21c161bf.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport {createGlobalStyle} from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\nhtml  {\nwidth: 100%;\nheight: 100%;\nmargin: 0;\n}\n  body {\n    padding: 0;\n    margin: 0;\n    font-family: 'Montserrat', sans-serif;\n    color: black;\n    font-size: 42px;\n    height: 100%;\n    width: 100%;\n  }\n  \n  *, *::before, *::after {\n    box-sizing: border-box;\n  }\n`;\n\nclass GlobalStyle extends PureComponent {\n    render() {\n        return (\n            <GlobalStyles/>\n        );\n    }\n}\n\n\nexport default GlobalStyle;","import { CanvasLogic } from \"./CanvasLogic\";\n\nexport class CanvasProperties {\n    constructor() {\n        this.scene = CanvasLogic.scene;\n        this.renderer = CanvasLogic.renderer;\n        this.camera = CanvasLogic.camera;\n        this.rectangle = CanvasLogic.rectangle;\n        this.randoms = CanvasLogic.randoms;\n        this.lasersNumber = 100;\n        this.canvasDots = CanvasLogic.canvasDots;\n        this.canvasLines = CanvasLogic.canvasLines;\n    }\n}","import { CanvasProperties } from \"./CanvasProperties\";\nimport * as THREE from \"three\";\n\nexport class CanvasAnimate extends CanvasProperties {\n\n    animate() {\n        requestAnimationFrame(this.animate.bind(this));\n        this.rotateRectangle();\n        this.camera.lookAt(new THREE.Vector3(-6, 0,  4));\n        this.camera.zoom = 0.08;\n        this.camera.updateProjectionMatrix();\n        this.renderer.render(this.scene, this.camera);\n    }\n\n    rotateRectangle() {\n        const coefficient = window.innerWidth / window.innerHeight;\n\n        for (let i = 0; i < this.lasersNumber; i++) {\n            const time = Date.now() * 0.0008 * this.randoms[i];\n\n            this.canvasDots[i].position.x = -1;\n            this.canvasDots[i].position.y = Math.sin(time * 0.5) * i * 0.5;\n            this.canvasDots[i].position.z = Math.cos(time * 0.5) * i *  (0.8 / coefficient);\n\n            this.canvasLines[i].position.x = -1;\n            this.canvasLines[i].position.y = Math.sin(time * 0.5) * i * 0.5;\n            this.canvasLines[i].position.z = Math.cos(time * 0.5) * i *  (0.8 / coefficient);\n        }\n    }\n}","import { CanvasProperties } from \"./CanvasProperties\";\nimport * as THREE from \"three\";\n\nexport class CanvasResize extends CanvasProperties {\n\n    addWindowResizeListener(func) {\n        window.addEventListener('resize', func);\n    }\n\n\n    scaleRendererOnResize() {\n        this.coefficient = window.innerWidth / window.innerHeight;\n        this.addWindowResizeListener(this.scaleRenderer.bind(this));\n        this.scaleRenderer();\n\n    }\n\n    scaleRenderer() {\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n\n        this.canvasLines.forEach((line) => {\n            line.geometry.vertices = [\n                new THREE.Vector3(0, 200, -100 * ( 1 / this.coefficient)),\n                new THREE.Vector3(0, 0, 0),\n            ]\n        });\n    }\n}","import { CanvasProperties } from \"../CanvasProperties\";\nimport * as THREE from \"three\";\nimport { CanvasLogic } from \"../CanvasLogic\";\n\nexport class CanvasDot extends CanvasProperties {\n\n    drawDot() {\n        const color = this.generateRandomColor();\n        const dotGeometry = new THREE.Geometry();\n        dotGeometry.vertices.push(\n            new THREE.Vector3(0, 0, 0),\n        );\n        const dotMaterial = new THREE.PointsMaterial({ size: 2, sizeAttenuation: false, color: color });\n        const dot = new THREE.Points(dotGeometry, dotMaterial);\n        CanvasLogic.canvasDots.push(dot);\n        this.scene.add(dot);\n\n    }\n\n    generateRandomColor() {\n        let rgbString = \"rgb(\";\n        for (let i = 0; i < 3; i++) {\n            rgbString += (Math.floor(Math.random() * 255));\n\n            (i === 2)\n                ? rgbString += ')' :\n                rgbString += ',';\n        }\n        return rgbString;\n    }\n}","import { CanvasProperties } from \"../CanvasProperties\";\nimport * as THREE from \"three\";\nimport { CanvasLogic } from \"../CanvasLogic\";\n\nexport class CanvasLine extends CanvasProperties {\n\n    drawLine() {\n        const material = new THREE.LineBasicMaterial({\n            color: 0x999999, transparent: true, opacity: true\n        });\n        material.opacity = 0.2;\n\n        const geometry = new THREE.Geometry();\n        geometry.vertices.push(\n            new THREE.Vector3(0, 200, -50),\n            new THREE.Vector3(0, 0, 0),\n        );\n        const line = new THREE.Line(geometry, material);\n        this.scene.add(line);\n        CanvasLogic.canvasLines.push(line);\n    }\n}","import { CanvasProperties } from \"../CanvasProperties\";\nimport { CanvasDot } from \"./CanvasDot\";\nimport { CanvasLine } from \"./CanvasLine\";\nimport { CanvasLogic } from \"../CanvasLogic\";\n\nexport class CanvasLasers extends CanvasProperties {\n\n    drawLasers() {\n        for (let i = 0; i < this.lasersNumber; i++) {\n            CanvasLogic.randoms.push(Math.random());\n\n            const dot = new CanvasDot();\n            dot.drawDot();\n\n            const line = new CanvasLine();\n            line.drawLine();\n        }\n    }\n}","import * as THREE from \"three\";\nimport { CanvasAnimate } from \"./CanvasAnimate\";\nimport { CanvasResize } from \"./CanvasResize\";\nimport { CanvasLasers } from \"./CanvasLasers/CanvasLasers\";\n\nexport class CanvasLogic {\n\n    constructor(canvas) {\n        this.scene = new THREE.Scene();\n        this.renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true });\n        this.renderer.setClearColor(0x252627, 1)\n    }\n\n\n    createAnimation() {\n        this.setUpCamera();\n        this.setUpCanvasStaticProperties();\n        this.drawLasers();\n\n        this.scaleRendererOnResize();\n        this.animate();\n    }\n\n\n    setUpCamera() {\n        this.camera =\n            new THREE.OrthographicCamera(\n                -1,\n                1,\n                1,\n                -1,\n                -500,\n                1000\n            );\n\n        this.scene.add(this.camera);\n    }\n\n    setUpCanvasStaticProperties() {\n        CanvasLogic.scene = this.scene;\n        CanvasLogic.renderer = this.renderer;\n        CanvasLogic.camera = this.camera;\n        CanvasLogic.dots = [];\n        CanvasLogic.randoms = [];\n        CanvasLogic.canvasDots = [];\n        CanvasLogic.canvasLines = [];\n    }\n\n    drawLasers() {\n        const drawLasers = new CanvasLasers();\n        drawLasers.drawLasers();\n    }\n\n    scaleRendererOnResize() {\n        const canvasResize = new CanvasResize();\n        canvasResize.scaleRendererOnResize();\n    }\n\n    animate() {\n        const canvasAnimate = new CanvasAnimate();\n        canvasAnimate.animate();\n    }\n}\n\n\n\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { CanvasLogic } from \"./CanvasLogic\";\n\nconst CanvasThreeJs = styled.canvas`\n  margin: 0;\n  padding: 0;\n  display: block;\n`;\n\n\nclass Canvas extends Component {\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef();\n    }\n\n    render() {\n        return (\n            <CanvasThreeJs ref={ this.canvas }></CanvasThreeJs>\n        );\n    }\n\n    componentDidMount() {\n        const canvasLogic = new CanvasLogic(this.canvas.current);\n        canvasLogic.createAnimation();\n    }\n}\n\nexport default Canvas;","import React, { Component } from 'react';\nimport Canvas from '../../canvas/Canvas';\nimport styled from 'styled-components';\n\nconst Claim = styled.div`\n  position: absolute;\n  color: white;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100vw;\n  font-weight: 700;\n  padding: 15px;\n  text-align: center;\n`;\n\nconst Header = styled.h1`\n  display: block;\n  font-size: 30px;\n  padding: 0;\n  margin: 0;\n\n  @media (min-width: 476px) {\n    font-size: 34px;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 38px;\n  }\n\n  @media (min-width: 1000px) {\n    font-size: 42px;\n  }\n`;\n\n\nconst PrimaryColor = styled.span`\n  color: ${props => props.theme.colors.primary}\n`;\n\n\nclass Home extends Component {\n    render() {\n        return (\n            <>\n                <Canvas/>\n                <Claim>\n                    <Header>\n                        Hello, I'm <PrimaryColor> Peter Zdziarski. </PrimaryColor>\n                    </Header>\n                    <Header>I'm a full-stack web developer.</Header>\n                </Claim>\n            </>\n        );\n    }\n}\n\n\nexport default Home;","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./components/home/Home\";\n\nclass Router extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Route exact path=\"/\" component={ Home }/>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Router;","export const theme = {\n    font: {\n        thin: 300,\n        regular: 400,\n        bold: 800\n    },\n    colors: {\n        primary: \"#2ce8cd\"\n    }\n};","import React, { Component } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyles from './components/GlobalStyle';\nimport Router from './Router';\nimport { theme } from \"./utils/theme\";\n\nclass App extends Component {\n    render() {\n        return (\n            <>\n                <GlobalStyles/>\n                <ThemeProvider theme={theme}>\n                    <Router/>\n                </ThemeProvider>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}